# nginx reverse proxy configuration example
# Place this in your nginx sites-available directory

server {
    listen 80;
    server_name your-domain.com;  # Change to your domain
    
    # Serve static files directly from nginx (recommended for performance)
    location /static/ {
        alias /path/to/your/app/static/;  # Change to your static directory path
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Handle CSS files
        location ~* \.(css)$ {
            add_header Content-Type text/css;
        }
        
        # Handle JS files
        location ~* \.(js)$ {
            add_header Content-Type application/javascript;
        }
        
        # Handle images
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            add_header Content-Type image/*;
        }
    }
    
    # Proxy all other requests to FastAPI
    location / {
        proxy_pass http://127.0.0.1:8000;  # Change to your FastAPI server address
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeout settings
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
    }
}

# HTTPS version (recommended for production)
server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    ssl_certificate /path/to/your/ssl/cert.pem;
    ssl_certificate_key /path/to/your/ssl/key.pem;
    
    # Static files with HTTPS
    location /static/ {
        alias /path/to/your/app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Proxy to FastAPI with HTTPS headers
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}